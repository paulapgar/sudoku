(()=>{"use strict";class e{constructor(){this._knownNum=0,this._possNumsArray=[]}populatePossNums(e){for(let t=1;t<=e;t++)this._possNumsArray.push(!0)}clearPossNums(){this._possNumsArray.fill(!1)}hasPossNum(e){return this._possNumsArray[e-1]}getPossNums(){let e=[];for(let t=0;t<this._possNumsArray.length;t++)!0===this._possNumsArray[t]&&e.push(t+1);return e}onePossNumLeft(){let e=[];for(let t=0;t<this._possNumsArray.length;t++)!0===this._possNumsArray[t]&&e.push(t+1);return 1===e.length?e[0]:0}removePossNum(e){this._possNumsArray[e-1]=!1}get knownNum(){return this._knownNum}set knownNum(e){this._knownNum=e,this.clearPossNums()}}class t{static appendText(e,t){e.value+=t+"\n"}}class s{}class l{}l.origText=document.getElementById("OriginalPuzzle"),l.scanText=document.getElementById("ScannedPuzzle"),l.scanButton=document.getElementById("scan"),l.puzzleSelect=document.getElementById("puzzles");class o{constructor(t){switch(this._boardSize=0,this._blockSize=0,this._needEval=!1,this._setupDone=!1,this._cells=new Map([]),this._boardSize=t.size,this._boardSize){case 9:this._blockSize=3;break;case 16:this._blockSize=4;break;default:console.log("Invalid boardSize!")}for(let s=0;s<t.size;s++)for(let l=0;l<t.size;l++){let o=new e;o.populatePossNums(t.size),this._cells.set(this.getCellNum(s,l),o)}for(let e=0;e<t.size;e++)for(let s=0;s<t.size;s++)t.board[e][s]>0&&this.setCellKnown(s,e,t.board[e][s])}getCellNum(e,t){return e*this._boardSize+t}getCell(e,t){return this._cells.get(this.getCellNum(e,t))}setCellKnown(e,s,o){this.getCell(e,s).knownNum=o,this.needEval=!0,!0===this.setupDone&&t.appendText(l.scanText,`Set cell (${e},${s}) to ${o}`),this.clearColumn(e,o),this.clearRow(s,o),this.clearBlock(e,s,o)}clearColumn(e,t){for(let s=0;s<this._boardSize;s++)this.getCell(e,s).removePossNum(t)}clearRow(e,t){for(let s=0;s<this._boardSize;s++)this.getCell(s,e).removePossNum(t)}clearBlock(e,t,s){let l=Math.floor(e/this._blockSize)*this._blockSize,o=Math.floor(t/this._blockSize)*this._blockSize;for(let r=l;r<l+this._blockSize;r++)for(let l=o;l<o+this._blockSize;l++)r===e&&l===t||this.getCell(r,l).removePossNum(s)}processBoardOnePossible(){for(let e=0;e<this._boardSize;e++)for(let t=0;t<this._boardSize;t++){let s=this.getCell(e,t).onePossNumLeft();if(s>0)return this.setCellKnown(e,t,s),!0}return!1}processBoardBlockSingleNumber(){var e;let t,s;t=this._boardSize/this._blockSize,s=this._boardSize/this._blockSize;for(let l=0;l<t;l++)for(let o=0;o<s;o++){let r=new Map;for(let e=1;e<=this._boardSize;e++)r.set(e,[]);for(let e=l*t;e<l*t+t;e++)for(let t=o*s;t<o*s+s;t++)0===this.getCell(e,t).knownNum&&this.getCell(e,t).getPossNums().forEach((s=>{var l;let o=null!==(l=r.get(s))&&void 0!==l?l:[];o.push([e,t]),r.set(s,o)}));for(let t=1;t<=this._boardSize;t++){let s=null!==(e=r.get(t))&&void 0!==e?e:[];if(1===s.length)return this.setCellKnown(s[0][0],s[0][1],t),!0}}return!1}processBoardStep(){this.needEval=!1,t.appendText(l.scanText,"Scanner #1 try"),this.processBoardBlockSingleNumber()||(t.appendText(l.scanText,"Scanner #2 try"),this.processBoardOnePossible())}printBoard(e){let s,l,o=this._boardSize>9?2:1;for(let r=0;r<this._boardSize;r++){let a=[];for(let e=0;e<this._boardSize;e++)s=this.getCell(e,r),s.knownNum>0?(l=s.knownNum.toString(),a.push(`[${l.padStart(o)}]`)):a.push(`[${" ".repeat(o)}]`);t.appendText(e,a.join(""))}}get setupDone(){return this._setupDone}set setupDone(e){this._setupDone=e}get needEval(){return this._needEval}set needEval(e){this._needEval=e}}const r=[{name:"Puzzle1",label:"Puzzle #1 (Easy)",size:9,board:[[0,6,0,0,0,0,0,1,0],[1,0,0,2,0,0,7,0,3],[0,0,0,6,0,9,0,8,0],[0,7,5,0,0,0,9,0,0],[0,0,0,0,5,0,0,0,0],[0,0,2,0,0,0,5,4,0],[0,8,0,1,0,6,0,0,0],[5,0,3,0,0,2,0,0,8],[0,9,0,0,0,0,0,2,0]]},{name:"Puzzle38",label:"Puzzle #38 (Easy)",size:9,board:[[0,1,0,7,0,8,9,0,0],[3,0,0,0,0,9,0,8,0],[0,0,0,0,5,2,0,0,6],[8,0,0,0,7,0,2,4,9],[0,0,4,8,9,3,1,0,0],[9,5,7,0,4,0,0,0,3],[7,0,0,9,2,0,0,0,0],[0,6,0,3,0,0,0,0,2],[0,0,9,6,0,5,0,7,0]]},{name:"Puzzle88",label:"Puzzle #88 (Medium)",size:9,board:[[0,0,0,1,9,0,0,7,0],[0,0,8,0,0,0,0,0,3],[0,4,0,0,0,6,0,0,0],[9,0,0,0,1,0,6,0,0],[1,0,0,5,0,3,0,0,8],[0,0,4,0,7,0,0,0,2],[0,0,0,7,0,0,0,8,0],[6,0,0,0,0,0,7,0,0],[0,3,0,0,4,8,0,0,0]]},{name:"Puzzle94",label:"Puzzle #94 (Medium)",size:9,board:[[0,3,1,0,0,0,0,0,0],[7,0,8,0,2,0,0,0,1],[0,0,0,8,0,0,4,0,0],[0,7,0,0,3,6,0,0,0],[0,4,6,0,0,0,2,3,0],[0,0,0,5,7,0,0,4,0],[0,0,5,0,0,8,0,0,0],[6,0,0,0,5,0,1,0,2],[0,0,0,0,0,0,3,6,0]]},{name:"Puzzle174",label:"Puzzle #74 (Hard)",size:9,board:[[0,0,8,0,0,0,4,0,0],[0,0,0,4,0,5,0,0,0],[9,0,7,0,0,0,2,0,6],[0,6,0,0,3,0,0,7,0],[0,0,0,8,5,9,0,0,0],[0,8,0,0,7,0,0,1,0],[1,0,4,0,0,0,3,0,8],[0,0,0,2,0,3,0,0,0],[0,0,6,0,0,0,7,0,0]]},{name:"Puzzle245",label:"Puzzle #245 (Hard)",size:9,board:[[0,0,0,0,0,7,5,0,0],[5,0,0,3,0,0,0,0,0],[6,0,7,0,0,0,0,0,2],[0,0,2,0,0,3,7,0,0],[0,0,0,0,5,0,0,0,0],[0,0,3,4,0,0,8,0,0],[3,0,0,0,0,0,4,0,8],[0,0,0,0,0,4,0,0,9],[0,0,1,5,0,0,0,0,0]]},{name:"Puzzle16x16",label:"Puzzle 16x16 (Hard)",size:16,board:[[0,3,0,6,0,2,0,11,0,0,14,0,1,0,0,0],[16,0,0,14,0,0,0,0,8,0,0,0,0,15,0,0],[13,0,0,2,0,0,12,1,6,16,0,0,10,0,0,5],[0,0,10,0,9,0,5,0,1,3,2,0,0,16,0,6],[4,14,0,0,0,1,9,0,0,10,0,0,11,5,0,0],[11,2,12,0,13,0,0,5,0,14,0,0,0,0,6,9],[0,10,0,3,0,0,0,0,0,0,7,13,0,0,4,2],[0,0,16,0,7,0,3,0,0,0,6,2,13,0,15,0],[0,15,0,12,4,11,0,0,0,6,0,10,0,7,0,0],[9,11,0,0,6,5,0,0,0,0,0,0,4,0,12,0],[2,5,0,0,0,0,1,0,15,0,0,4,0,8,3,14],[0,0,4,1,0,0,8,0,0,2,13,0,0,0,10,16],[10,0,7,0,0,6,2,9,0,13,0,3,0,4,0,0],[5,0,0,11,0,0,13,3,2,4,0,0,14,0,0,10],[0,0,3,0,0,0,0,14,0,0,0,0,8,0,0,7],[0,0,0,4,0,16,0,0,12,0,8,0,15,0,1,0]]}];for(const e in r){const t=document.createElement("option");t.value=r[e].name,t.text=r[e].label,l.puzzleSelect.add(t)}l.scanButton.addEventListener("click",(function(){if(s.board&&!1!==s.board.setupDone&&s.board){l.scanText.value="";let e=-1;for(;!0===s.board.needEval;)s.board.processBoardStep(),e++;t.appendText(l.scanText,`Finished With Board  (${e} moves)`),s.board.printBoard(l.scanText),l.scanText.scrollTop=l.scanText.scrollHeight,s.board.setupDone=!1}})),l.puzzleSelect.addEventListener("change",(function(){if("Choose"!==l.puzzleSelect.value){for(const e in r)r[e].name===l.puzzleSelect.value&&(s.board=new o(r[e]));l.origText.value="",l.scanText.value="",t.appendText(l.origText,"Initial Board"),s.board.printBoard(l.origText),s.board.setupDone=!0}else l.origText.value="",l.scanText.value="",s.board.setupDone=!1}))})();